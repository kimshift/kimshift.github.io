import{_ as s,q as i,p as a,aE as t}from"./chunks/framework.-H45_L2h.js";const n="/assets/4OmHy5oCsF3ULpa.CyCedmvf.png",y=JSON.parse('{"title":"2.HTML5","description":"","frontmatter":{"title":"2.HTML5","date":"2023-06-02T09:57:57.000Z","categories":["前端开发"],"tags":["html"],"prev":"1.HTML基础","next":"3.移动端布局"},"headers":[],"relativePath":"技术文章/前端开发/html/2.HTML5.md","filePath":"技术文章/前端开发/html/2.HTML5.md","lastUpdated":1723096133000}'),l={name:"技术文章/前端开发/html/2.HTML5.md"},e=t(`<h1 id="_2-html5" tabindex="-1">2.HTML5 <a class="header-anchor" href="#_2-html5" aria-label="Permalink to &quot;2.HTML5&quot;">​</a></h1><p><strong>「1. 什么是 HTML5」</strong></p><ul><li><p>定义：<strong>HTML5</strong>定义了<strong>HTML</strong>标准的最新版本，是对<strong>HTML</strong>的第五次重大修改，号称下一代的 HTML。</p></li><li><p>两个概念：</p><ul><li>是一个新版本的<strong>HTML</strong>语言，定义了新的标签、特性和属性</li><li>拥有一个强大的技术集，这些技术集是指：<strong>HTML5、CSS3、JavaScript</strong>,这也是广义上的 HTML5。</li></ul></li></ul><p><strong>「2. HTML5 拓展了哪些内容」</strong></p><ul><li>语义化标签</li><li>本地存储</li><li>兼容特性</li><li>2D、3D</li><li>动画、过渡</li><li>CSS3 特性</li><li>性能与集成</li></ul><p><strong>「3. HTML5 的现状」</strong></p><p>绝大多数新的属性，都已经被浏览器所支持，最新版本的浏览器已经开始陆续支持最新的特性，总的来说：HTML5 已经是大势所趋。</p><h2 id="_1-html5-的新特性" tabindex="-1">1. HTML5 的新特性 <a class="header-anchor" href="#_1-html5-的新特性" aria-label="Permalink to &quot;1. HTML5 的新特性&quot;">​</a></h2><p>HTML5 的新增特性主要是针对于以前的不足，增加了一些<strong>新的标签</strong>、<strong>新的表单</strong>和<strong>新的表单属性</strong>等。 这些新特性都有兼容性问题，基本是<strong>IE9+以上版本的浏览器</strong>才支持，如果不考虑兼容性问题，可以大量使用这些新特性。</p><blockquote><p>声明︰</p><p>1.新特性增加了很多，但是我们专注于开发常用的新特性。 ⒉ 基础班我们讲解部分新特性，到了就业班还会继续讲解其他新特性。</p></blockquote><h3 id="_1-1-html5-新增的语义化标签" tabindex="-1">1.1 HTML5 新增的语义化标签 <a class="header-anchor" href="#_1-1-html5-新增的语义化标签" aria-label="Permalink to &quot;1.1 HTML5 新增的语义化标签&quot;">​</a></h3><ul><li>语义化是指用 HTML 写出符合<strong>内容的结构化</strong>（内容语义化），选择<strong>合适的标签</strong>（代码语义化），能够便于开发者阅读和写出更优雅的代码的同时让浏览器的爬虫和机器很好地解析。</li></ul><p>以前布局，我们基本用 div 来做。div 对于搜索引擎来说，是没有语义的。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;header&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nav&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;content&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;footer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><ul><li><code>header</code> --- 头部标签</li><li><code>nav</code> --- 导航标签</li><li><code>article</code> --- 内容标签</li><li><code>section</code> --- 块级标签</li><li><code>aside</code> --- 侧边栏标签</li><li><code>footer</code> --- 尾部标签</li></ul><p><img src="`+n+`" alt="4OmHy5oCsF3ULpa" loading="lazy"></p><p><strong>注意 ∶</strong></p><ul><li>这种语义化标准主要是针对搜索引擎的</li><li>这些新标签页面中可以使用多次</li><li>在 IE9 中，需要把这些元素转换为块级元素</li><li>其实，我们移动端更喜欢使用这些标签</li><li>HTML5 还增加了很多其他标签，后面还有陆续介绍</li></ul><h3 id="_1-2-html5-新增的多媒体标签" tabindex="-1">1.2 HTML5 新增的多媒体标签 <a class="header-anchor" href="#_1-2-html5-新增的多媒体标签" aria-label="Permalink to &quot;1.2 HTML5 新增的多媒体标签&quot;">​</a></h3><p>新增的多媒体标签主要包含两个 ∶</p><ol><li>音频: <code>&lt;audio&gt;</code></li><li>视频: <code>&lt;video&gt;</code></li></ol><p>使用它们可以很方便的在页面中嵌入音频和视频，而不再去使用 flash 和其他浏览器插件。</p><h4 id="_1-2-1-视频-video" tabindex="-1">1.2.1 视频 <code>&lt;video&gt;</code> <a class="header-anchor" href="#_1-2-1-视频-video" aria-label="Permalink to &quot;1.2.1 视频 \`&lt;video&gt;\`&quot;">​</a></h4><p>HTML5 在不使用插件的情况下，也可以原生的支持视频格式文件的播放，当然，支持的格式是有限的。</p><p>当前 <code>&lt;video&gt;</code> 元素支持三种视频格式:尽量使用 mp4 格式</p><table tabindex="0"><thead><tr><th style="text-align:left;">浏览器</th><th style="text-align:left;">MP4</th><th style="text-align:left;">WebM</th><th style="text-align:left;">Ogg</th></tr></thead><tbody><tr><td style="text-align:left;">Internet Explorer</td><td style="text-align:left;">YES</td><td style="text-align:left;">NO</td><td style="text-align:left;">NO</td></tr><tr><td style="text-align:left;">Chrome</td><td style="text-align:left;">YES</td><td style="text-align:left;">YES</td><td style="text-align:left;">YES</td></tr><tr><td style="text-align:left;">Firefox</td><td style="text-align:left;">YES 从 Firefox 21 版本开始 Linux 系统从 Firefox 30 开始</td><td style="text-align:left;">YES</td><td style="text-align:left;">YES</td></tr><tr><td style="text-align:left;">Safari</td><td style="text-align:left;">YES</td><td style="text-align:left;">NO</td><td style="text-align:left;">NO</td></tr><tr><td style="text-align:left;">Opera</td><td style="text-align:left;">YES 从 Opera 25 版本开始</td><td style="text-align:left;">YES</td><td style="text-align:left;">YES</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">autoplay</td><td style="text-align:left;">autoplay</td><td style="text-align:left;">如果出现该属性，则视频在就绪后马上播放。</td></tr><tr><td style="text-align:left;">controls</td><td style="text-align:left;">controls</td><td style="text-align:left;">如果出现该属性，则向用户显示控件，比如播放按钮。</td></tr><tr><td style="text-align:left;">height</td><td style="text-align:left;"><em>pixels</em></td><td style="text-align:left;">设置视频播放器的高度。</td></tr><tr><td style="text-align:left;">loop</td><td style="text-align:left;">loop</td><td style="text-align:left;">如果出现该属性，则当媒介文件完成播放后再次开始播放。</td></tr><tr><td style="text-align:left;">muted</td><td style="text-align:left;">muted</td><td style="text-align:left;">如果出现该属性，视频的音频输出为静音。</td></tr><tr><td style="text-align:left;">poster</td><td style="text-align:left;"><em>URL</em></td><td style="text-align:left;">规定视频正在下载时显示的图像，直到用户点击播放按钮。</td></tr><tr><td style="text-align:left;">preload</td><td style="text-align:left;">auto metadata none</td><td style="text-align:left;">如果出现该属性，则视频在页面加载时进行加载，并预备播放。如果使用 &quot;autoplay&quot;，则忽略该属性。</td></tr><tr><td style="text-align:left;">src</td><td style="text-align:left;"><em>URL</em></td><td style="text-align:left;">要播放的视频的 URL。</td></tr><tr><td style="text-align:left;">width</td><td style="text-align:left;"><em>pixels</em></td><td style="text-align:left;">设置视频播放器的宽度。</td></tr></tbody></table><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- &lt;video src=&quot;./media/video.mp4&quot; controls=&quot;controls&quot;&gt;&lt;/video&gt; --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 谷歌浏览器禁用了自动播放功能，如果想自动播放，需要添加 muted 属性 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">video</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> controls</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;controls&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> autoplay</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> muted</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> loop</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> poster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./media/pig.jpg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">source</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;movie.mp4&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;video/mp4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">source</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;movie.ogg&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;video/ogg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  您的浏览器不支持 video 标签。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">video</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h4 id="_1-2-2-音频-audio" tabindex="-1">1.2.2 音频 <code>&lt;audio&gt;</code> <a class="header-anchor" href="#_1-2-2-音频-audio" aria-label="Permalink to &quot;1.2.2 音频 \`&lt;audio&gt;\`&quot;">​</a></h4><p>当前 <code>&lt;audio&gt;</code> 元素支持三种音频格式:</p><table tabindex="0"><thead><tr><th style="text-align:left;">浏览器</th><th style="text-align:left;">MP3</th><th style="text-align:left;">Wav</th><th style="text-align:left;">Ogg</th></tr></thead><tbody><tr><td style="text-align:left;">Internet Explorer</td><td style="text-align:left;">YES</td><td style="text-align:left;">NO</td><td style="text-align:left;">NO</td></tr><tr><td style="text-align:left;">Chrome</td><td style="text-align:left;">YES</td><td style="text-align:left;">YES</td><td style="text-align:left;">YES</td></tr><tr><td style="text-align:left;">Firefox</td><td style="text-align:left;">YES</td><td style="text-align:left;">YES</td><td style="text-align:left;">YES</td></tr><tr><td style="text-align:left;">Safari</td><td style="text-align:left;">YES</td><td style="text-align:left;">YES</td><td style="text-align:left;">NO</td></tr><tr><td style="text-align:left;">Opera</td><td style="text-align:left;">YES</td><td style="text-align:left;">YES</td><td style="text-align:left;">YES</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">autoplay</td><td style="text-align:left;">autoplay</td><td style="text-align:left;">如果出现该属性，则音频在就绪后马上播放。</td></tr><tr><td style="text-align:left;">controls</td><td style="text-align:left;">controls</td><td style="text-align:left;">如果出现该属性，则向用户显示音频控件（比如播放/暂停按钮）。</td></tr><tr><td style="text-align:left;">loop</td><td style="text-align:left;">loop</td><td style="text-align:left;">如果出现该属性，则每当音频结束时重新开始播放。</td></tr><tr><td style="text-align:left;">muted</td><td style="text-align:left;">muted</td><td style="text-align:left;">如果出现该属性，则音频输出为静音。</td></tr><tr><td style="text-align:left;">preload</td><td style="text-align:left;">auto metadata none</td><td style="text-align:left;">规定当网页加载时，音频是否默认被加载以及如何被加载。</td></tr><tr><td style="text-align:left;">src</td><td style="text-align:left;"><em>URL</em></td><td style="text-align:left;">规定音频文件的 URL。</td></tr></tbody></table><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">audio</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> controls</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- 注意：在 chrome 浏览器中已经禁用了 autoplay 属性 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- &lt;audio src=&quot;./media/snow.mp3&quot; controls autoplay&gt;&lt;/audio&gt; --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- 因为不同浏览器支持不同的格式，所以我们采取的方案是这个音频准备多个文件 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">source</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;horse.ogg&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;audio/ogg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">source</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;horse.mp3&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;audio/mpeg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  您的浏览器不支持 audio 元素。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">audio</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h4 id="_1-2-3-多媒体标签总结" tabindex="-1">1.2.3 多媒体标签总结 <a class="header-anchor" href="#_1-2-3-多媒体标签总结" aria-label="Permalink to &quot;1.2.3 多媒体标签总结&quot;">​</a></h4><ul><li><p>音频标签和视频标签使用基本一致</p></li><li><p>多媒体标签在不同浏览器下情况不同，存在兼容性问题</p></li><li><p>谷歌浏览器把音频和视频标签的自动播放都<strong>禁止</strong>了</p></li><li><p>谷歌浏览器中视频添加<strong>muted</strong>属性来静音播放视频，音频不可以（可以通过 JavaScript 解决）</p></li><li><p>视频标签是重点，我们经常设置自动播放，不使用 controls 控件，循环和设置大小属性</p></li></ul><h3 id="_1-3-html5-新增的-input-类型" tabindex="-1">1.3 HTML5 新增的 input 类型 <a class="header-anchor" href="#_1-3-html5-新增的-input-类型" aria-label="Permalink to &quot;1.3 HTML5 新增的 input 类型&quot;">​</a></h3><table tabindex="0"><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>type=&quot;email&quot;</td><td>限制用户输入必须为 Email 类型 <code>&lt;br/&gt;</code></td></tr><tr><td>type=&quot;url&quot;</td><td>限制用户输入必须为 URL 类型</td></tr><tr><td>type=&quot;date&quot;</td><td>限制用户输入必须为日期类型</td></tr><tr><td>type=&quot;time&quot;</td><td>限制用户输入必须为时间类型</td></tr><tr><td>type=&quot;month&quot;</td><td>限制用户输入必须为月类型</td></tr><tr><td>type=&quot;week&quot;</td><td>限制用户输入必须为周类型</td></tr><tr><td>type=&quot;number&quot;</td><td>限制用户输入必须为数字类型</td></tr><tr><td>type=&quot;tel&quot;</td><td>手机号码</td></tr><tr><td>type=&quot;search&quot;</td><td>搜索框</td></tr><tr><td>type=&quot;color&quot;</td><td>生成一个颜色选择表单</td></tr></tbody></table><h3 id="_1-4-html5-新增的表单属性" tabindex="-1">1.4 HTML5 新增的表单属性 <a class="header-anchor" href="#_1-4-html5-新增的表单属性" aria-label="Permalink to &quot;1.4 HTML5 新增的表单属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>属性</th><th>值</th><th>说明</th></tr></thead><tbody><tr><td>required</td><td>required</td><td>表单拥有该属性表示其内容不能为空，必填</td></tr><tr><td>placeholder</td><td>提示文本</td><td>表单的提示信息，存在默认值将不显示(修改文字颜色 input::placeholder{color:#fff})</td></tr><tr><td>autofocus</td><td>autofocus</td><td>自动聚焦属性，页面加载完成自动聚焦到指定表单</td></tr><tr><td>autocomplete</td><td>off / on</td><td>当用户在字段开始键入时，浏览器基于之前键入过的值，应该显示出在字段中填写的选项。<br>默认已经打开，如 autocomplete=&quot;on”，关闭 autocomplete =&quot;off”需要放在表单内，同时加上 name 属性，同时成功提交</td></tr><tr><td>multiple</td><td>multiple</td><td>可以多选文件提交</td></tr></tbody></table><h2 id="_2-css3-的新特性" tabindex="-1">2. CSS3 的新特性 <a class="header-anchor" href="#_2-css3-的新特性" aria-label="Permalink to &quot;2. CSS3 的新特性&quot;">​</a></h2><h3 id="_2-1-css3-的现状" tabindex="-1">2.1 CSS3 的现状 <a class="header-anchor" href="#_2-1-css3-的现状" aria-label="Permalink to &quot;2.1 CSS3 的现状&quot;">​</a></h3><ul><li>新增的 CSS3 特性有兼容性问题，ie9+才支持</li><li>移动端支持优于 PC 端</li><li>不断改进中</li><li>应用相对广泛</li><li>现阶段主要学习 ∶ 新增选择器和盒子模型以及其他特性</li></ul><p><strong>CSS3</strong>新增选择器 CSS3 给我们新增了选择器，可以更加便捷，更加自由的选择目标元素。</p><ol><li>属性选择器</li><li>结构伪类选择器</li><li>伪元素选择器</li></ol><h3 id="_2-2-属性选择器" tabindex="-1">2.2 属性选择器 <a class="header-anchor" href="#_2-2-属性选择器" aria-label="Permalink to &quot;2.2 属性选择器&quot;">​</a></h3><p>属性选择器可以根据元素特定属性的来选择元素。这样就可以不用借助于类或者 id 选择器。</p><table tabindex="0"><thead><tr><th>选择符</th><th>简介</th></tr></thead><tbody><tr><td>E[att]</td><td>选择具有 att 属性的 E 元素</td></tr><tr><td>E[att=&quot;val&quot;]</td><td>选择具有 att 属性且属性值等于 val 的 E 元素</td></tr><tr><td>E[attN=&quot;val&quot;]</td><td>匹配具有 att 属性且值以 val 开头的 E 元素</td></tr><tr><td>E[att$=&quot;val&quot;]</td><td>匹配具有 att 属性且值以 val 结尾的 E 元素</td></tr><tr><td>E[att*=&quot;val&quot;]</td><td>匹配具有 att 属性且值中含有 val 的 E 元素</td></tr></tbody></table><p><strong>注意 ∶ 类选择器、属性选择器、伪类选择器，权重为 10。</strong></p><h3 id="_2-3-结构伪类选择器" tabindex="-1">2.3 结构伪类选择器 <a class="header-anchor" href="#_2-3-结构伪类选择器" aria-label="Permalink to &quot;2.3 结构伪类选择器&quot;">​</a></h3><p>结构伪类选择器主要根据<strong>文档结构</strong>来选择器元素，常用于根据父级选择器里面的子元素</p><table tabindex="0"><thead><tr><th>选择符</th><th>简介</th></tr></thead><tbody><tr><td>E:first-child</td><td>匹配父元素中的第一个子元素 E</td></tr><tr><td>E:last-child</td><td>匹配父元素中最后一个 E 元素</td></tr><tr><td>E:nth-child(n)</td><td>匹配父元素中的第 n 个子元素 E</td></tr><tr><td>E:first-of-type</td><td>指定类型 E 的第一个</td></tr><tr><td>E:last-of-type</td><td>指定类型 E 的最后一个</td></tr><tr><td>E:nth-of-type(n)</td><td>指定类型 E 的第 n 个</td></tr></tbody></table><ul><li>nth-child ( n）选择某个父元素的一个或多个特定的子元素</li><li>n 可以是数字，关键字和公式</li><li>n 如果是数字，就是选择第 n 个子元素，里面数字从 1 开始...n 可以是关键字:Een 偶数，odd 奇数</li><li>n 可以是公式︰常见的公式如下(如果 n 是公式，则从 0 开始计算，但是第 0 个元素或者超出了元素的个数会被忽略)</li></ul><table tabindex="0"><thead><tr><th>公式</th><th>取值</th></tr></thead><tbody><tr><td>2n</td><td>偶数</td></tr><tr><td>2n+1</td><td>奇数</td></tr><tr><td>5n</td><td>5 10 15....</td></tr><tr><td>n+5</td><td>从第 5 个开始(包含第五个）到最后</td></tr><tr><td>-n+5</td><td>前 5 个(包含第 5 个)...</td></tr></tbody></table><p>小结</p><ul><li>结构伪类选择器一般用于选择父级里面的第几个孩子</li><li>nth-child 对父元素里面所有孩子排序选择（序号是固定的）先找到第 n 个孩子，然后看看是否和 E 匹配</li><li>nth-of-type 对父元素里面指定子元素进行排序选择。先去匹配 E，然后再根据 E 找第 n 个孩子</li><li>关于 nth-child ( n ）我们要知道 n 是从 0 开始计算的，要记住常用的公式</li><li>如果是无序列表，我们肯定用 nth-child 更多</li><li>类选择器、属性选择器、伪类选择器，权重为 10。</li></ul><h3 id="_2-4-伪元素选择器-重点" tabindex="-1">2.4 伪元素选择器（重点) <a class="header-anchor" href="#_2-4-伪元素选择器-重点" aria-label="Permalink to &quot;2.4 伪元素选择器（重点)&quot;">​</a></h3><p>伪元素选择器可以帮助我们利用 CSS 创建新标签元素，而不需要 HTML 标签，从而简化 HTML 结构。</p><table tabindex="0"><thead><tr><th>选择符</th><th>简介</th></tr></thead><tbody><tr><td>::before</td><td>在元素内部的前面插入内容</td></tr><tr><td>::after</td><td>在元素内部的后面插入内容</td></tr></tbody></table><p>注意︰</p><ul><li><strong>before</strong>和<strong>after</strong>创建一个元素，但是属于行内元素</li><li>新创建的这个元素在文档树中是找不到的，所以我们称为<strong>伪元素</strong></li><li>语法: <strong>element::before {}</strong></li><li>before 和 after 必须有<strong>content 属性</strong></li><li>before 在父元素内容的前面创建元素，after 在父元素内容的后面插入元素</li><li><strong>伪元素选择器</strong>和<strong>标签选择器</strong>一样，权重为 1</li></ul><h3 id="_2-5-css3-盒子模型" tabindex="-1">2.5 CSS3 盒子模型 <a class="header-anchor" href="#_2-5-css3-盒子模型" aria-label="Permalink to &quot;2.5 CSS3 盒子模型&quot;">​</a></h3><blockquote><p>CSS3 中可以通过 box-sizing 来指定盒模型，有 2 个值:即可指定为 content-box、border-box,这样我们计算盒子大小的方式就发生了改变。</p></blockquote><p>可以分成两种情况︰</p><ol><li><p>box-sizing:content-box 盒子大小为 width + padding + border (以前默认的)</p></li><li><p>box-sizing: border-box 盒子大小为 width</p></li></ol><p>如果盒子模型我们改为了 box-sizing: border-box，那 padding 和 border 就不会撑大盒子了(前提 padding 和 border 不会超过 width 宽度)</p><h3 id="_2-6-css3-其他特性-了解" tabindex="-1">2.6 CSS3 其他特性(了解) <a class="header-anchor" href="#_2-6-css3-其他特性-了解" aria-label="Permalink to &quot;2.6 CSS3 其他特性(了解)&quot;">​</a></h3><h4 id="_2-6-1-css3-滤镜-filter" tabindex="-1">2.6.1 CSS3 滤镜 filter: <a class="header-anchor" href="#_2-6-1-css3-滤镜-filter" aria-label="Permalink to &quot;2.6.1 CSS3 滤镜 filter:&quot;">​</a></h4><p>filter CSS 属性将模糊或颜色偏移等图形效果应用于元素。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 函数(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*例如: filter: blur(5px); blur模糊处理数值越大越模糊*/</span></span></code></pre></div><h4 id="_2-6-2-css3-calc-函数" tabindex="-1">2.6.2 CSS3 calc 函数: <a class="header-anchor" href="#_2-6-2-css3-calc-函数" aria-label="Permalink to &quot;2.6.2 CSS3 calc 函数:&quot;">​</a></h4><p>calc()此 CSS 函数让你在声明 CSS 属性值时执行一些计算。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>width: calc(100% - 80px);</span></span></code></pre></div><p>括号里面可以使用+-*/来进行计算。</p><h3 id="_2-7-css3-过渡-重点" tabindex="-1">2.7 CSS3 过渡（重点) <a class="header-anchor" href="#_2-7-css3-过渡-重点" aria-label="Permalink to &quot;2.7 CSS3 过渡（重点)&quot;">​</a></h3><p>过渡(transition)是 CSS3 中具有颠覆性的特征之一，我们可以在不使用 Flash 动画或 JavaScript 的情况下，当元素从一种样式变换为另一种样式时为元素添加效果。 过渡动画︰是从一个状态渐渐的过渡到另外一个状态 可以让我们页面更好看，更动感十足，虽然低版本浏览器不支持( ie9 以下版本）但是不会影响页面布局。 <strong>我们现在经常和:hover 一起搭配使用。</strong></p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">transition: 要过渡的属性 花费时间 运动曲线 何时开始;</span></span></code></pre></div><ol><li>属性︰想要变化的 css 属性，宽度高度背景颜色内外边距都可以。如果想要所有的属性都变化过渡，写一个 all 就可以。</li><li>花费时间:单位是秒(必须写单位）比如 0.5s</li><li>运动曲线︰默认是 ease(可以省略)</li><li>何时开始︰单位是秒(必须写单位)可以设置延迟触发时间默认是 0s(可以省略)</li></ol><p>1.属性︰想要变化的 css 属性，宽度高度背景颜色内外边距都可以。如果想要所有的属性都变化过渡，写一个 all 就可以。 2.花费时间:单位是秒(必须写单位）比如 0.5s3.运动曲线︰默认是 ease(可以省略) 4.何时开始︰单位是秒(必须写单位)可以设置延迟触发时间默认是 0s(可以省略)</p><p><strong>记住过渡的使用口诀︰谁做过渡给谁加</strong></p><h3 id="_2-8-2d-转换" tabindex="-1">2.8 2D 转换 <a class="header-anchor" href="#_2-8-2d-转换" aria-label="Permalink to &quot;2.8 2D 转换&quot;">​</a></h3><p>转换(transform )是 CSS3 中具有颠覆性的特征之一，可以实现元素的位移、旋转、缩放等效果</p><p>转换( transform )你可以简单理解为变形</p><p><strong>2D 转换</strong>：是改变标签在二维平面上的位置和形状</p><ul><li>移动：<strong>translate</strong></li><li>旋转：<strong>rotate</strong></li><li>缩放：<strong>scale</strong></li></ul><h4 id="_2-8-1-二维坐标系" tabindex="-1">2.8.1 二维坐标系 <a class="header-anchor" href="#_2-8-1-二维坐标系" aria-label="Permalink to &quot;2.8.1 二维坐标系&quot;">​</a></h4><p>2D 转换是改变标签在二维平面上的位置和形状的一种技术，先来学习二维坐标系 <strong>0 原点</strong> <strong>× 轴水平向右</strong> -------------------------------------&gt; | | | |<strong>y 轴垂直向下</strong></p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  transform: translate(x, y)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  transform: translateX(n)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  transfrom: translateY(n)</span></span></code></pre></div><p>重点知识点</p><ul><li>定义 2D 转换中的移动，沿着 X 和 Y 轴移动元素</li><li>translate 最大的优点 ∶ 不会影响到其他元素的位置</li><li>translate 中的百分比单位是相对于自身元素的 translate:(50%,50%);</li><li>对行内标签没有效果</li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lightseagreen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 平移 */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 水平垂直移动 100px */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* transform: translate(100px, 100px); */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 水平移动 100px */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* transform: translate(100px, 0) */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 垂直移动 100px */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* transform: translate(0, 100px) */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 水平移动 100px */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* transform: translateX(100px); */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 垂直移动 100px */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translateY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /*百分比用法*/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translateY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>让一个盒子水平垂直居中</strong></p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">relative</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pink</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 1. 我们tranlate里面的参数是可以用 % */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 2. 如果里面的参数是 % 移动的距离是 盒子自身的宽度或者高度来对比的 */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 这里的 50% 就是 50px 因为盒子的宽度是 100px */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* transform: translateX(50%); */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">absolute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    top</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">purple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    /1.* </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">margin-top</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin-left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    /2.* </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">50%, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">50%)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      盒子往上走自己高度的一半   */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* translate 对于行内元素是无效的 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span></code></pre></div><h4 id="_2-8-2-2d-转换之旋转-rotate" tabindex="-1">2.8.2 2D 转换之旋转 rotate <a class="header-anchor" href="#_2-8-2-2d-转换之旋转-rotate" aria-label="Permalink to &quot;2.8.2 2D 转换之旋转 rotate&quot;">​</a></h4><p>2D 旋转指的是让元素在 2 维平面内顺时针旋转或者逆时针旋转。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* rotate(度数) 单位是：deg */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:hover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rotate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">360</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">deg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li>rotate 语法 <ul><li><code>rotate</code> 里面跟度数，单位是 <code>deg</code></li><li>角度为<strong>正</strong>时，顺时针，角度为负时，逆时针</li><li>默认旋转的中心点是元素的中心点</li></ul></li><li><strong>设置元素旋转的中心的(transform-origin)</strong></li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">transform-origin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: x y;</span></span></code></pre></div><ul><li><code>注意</code><ul><li>后面的参数 x 和 y 用空格隔开</li><li>x y 默认旋转的中心点是元素的中心(50% 50%),等价于<strong>center center</strong></li><li>还可以给 x y 设置像素或者方位名词(top、bottom、left、right、center)</li></ul></li></ul><h4 id="_2-8-3-2d-转换之缩放-scale" tabindex="-1">2.8.3 2D 转换之缩放 scale <a class="header-anchor" href="#_2-8-3-2d-转换之缩放-scale" aria-label="Permalink to &quot;2.8.3 2D 转换之缩放 scale&quot;">​</a></h4><ul><li><strong>scale</strong>的作用：用来控制元素的放大与缩小</li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">transform: scale(x, y);</span></span></code></pre></div><ul><li><p><code>知识要点：</code></p></li><li><ul><li>注意，x 与 y 之间用逗号进行分隔</li><li><code>transform: scale(1, 1)</code>: 宽高都放大一倍，相当于没有放大</li><li><code>transform: scale(2, 2)</code>: 宽和高都放大了二倍</li><li><code>transform: scale(2)</code>: 如果只写了一个参数，第二个参数就和第一个参数一致</li><li><code>transform:scale(0.5, 0.5)</code>: 缩小</li><li><code>scale</code> 最大的优势：可以设置转换中心点缩放，默认以中心点缩放，而且不影响其他盒子</li></ul></li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:hover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 注意，数字是倍数的含义，所以不需要加单位 */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* transform: scale(2, 2) */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 实现等比缩放，同时修改宽与高 */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* transform: scale(2) */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 小于 1 就等于缩放*/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="_2-8-4-2d-转换综合写法以及顺序问题" tabindex="-1">2.8.4 2D 转换综合写法以及顺序问题 <a class="header-anchor" href="#_2-8-4-2d-转换综合写法以及顺序问题" aria-label="Permalink to &quot;2.8.4 2D 转换综合写法以及顺序问题&quot;">​</a></h4><h5 id="知识要点" tabindex="-1">知识要点 <a class="header-anchor" href="#知识要点" aria-label="Permalink to &quot;知识要点&quot;">​</a></h5><ul><li>同时使用多个转换，其格式为 <code>transform: translate() rotate() scale()</code></li><li>顺序会影响到转换的效果(先旋转会改变坐标轴方向)</li><li><strong>当我们同时有位置或者其他属性的时候，要将位移放到最前面</strong></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>div:hover {</span></span>
<span class="line"><span>  transform: translate(200px, 0) rotate(360deg) scale(1.2)</span></span>
<span class="line"><span>}</span></span></code></pre></div><h4 id="_2-8-5-2d-转换总结" tabindex="-1">2.8.5 2D 转换总结 <a class="header-anchor" href="#_2-8-5-2d-转换总结" aria-label="Permalink to &quot;2.8.5 2D 转换总结&quot;">​</a></h4><ul><li>转换 transform 我们简单理解就是变形有 2D 和 3D 之分</li><li>我们暂且学了三个分别是位移旋转和缩放</li><li>2D 移动 translate(x, y)最大的优势是不影响其他盒子，里面参数用%，是相对于自身宽度和高度来计算的</li><li>可以分开写比如 translateX(x)和 translateY(y)</li><li>2D 旋转 rotate(度数)可以实现旋转元素度数的单位是 deg</li><li>2D 缩放 sacle(xy)里面参数是数字不跟单位可以是小数最大的优势不影响其他盒子</li><li>设置转换中心点 transform-origin : x y;参数可以百分比、像素或者是方位名词</li><li><strong>当我们进行综合写法，同时有位移和其他属性的时候，记得要将位移放到最前</strong></li></ul><h3 id="_2-9-动画-animation" tabindex="-1">2.9 动画(animation) <a class="header-anchor" href="#_2-9-动画-animation" aria-label="Permalink to &quot;2.9 动画(animation)&quot;">​</a></h3><p>**「动画」**是 CSS3 中最具颠覆性的特征之一，可通过设置多个节点来精确的控制一个或者一组动画，从而实现复杂的动画效果。</p><p>相比较过渡，动画可以实现更多变化，更多控制，连续自动播放等效果。</p><h4 id="_2-9-1「动画的使用」" tabindex="-1"><strong>2.9.1「动画的使用」</strong> <a class="header-anchor" href="#_2-9-1「动画的使用」" aria-label="Permalink to &quot;**2.9.1「动画的使用」**&quot;">​</a></h4><ol><li>先<strong>定义</strong>动画</li><li>再<strong>调用</strong>定义好的动画</li></ol><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*1. 定义动画*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@keyframes</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> 动画名称</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  0%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  100%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 调用动画 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  animation-name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 动画名称;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 持续时间 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  animation-duration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 持续时间；;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="_2-9-2「动画序列」" tabindex="-1"><strong>2.9.2「动画序列」</strong> <a class="header-anchor" href="#_2-9-2「动画序列」" aria-label="Permalink to &quot;**2.9.2「动画序列」**&quot;">​</a></h4><ul><li>0% 是动画的开始，100 % 是动画的完成，这样的规则就是<strong>动画序列</strong></li><li>在 <strong>@keyframs</strong>中规定某项 CSS 样式，就由创建当前样式<strong>逐渐</strong>改为新样式的动画效果</li><li>动画是使元素从一个样式逐渐变化为另一个样式的效果，可以改变任意多的样式任意多的次数</li><li>用百分比来规定变化发生的时间，或用 <code>from</code> 和 <code>to</code>，等同于 0% 和 100%</li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">aquamarine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      animation-name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">move</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      animation-duration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    @keyframes</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> move</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      0%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      100%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h4 id="_2-9-3「动画常见属性」" tabindex="-1"><strong>2.9.3「动画常见属性」</strong> <a class="header-anchor" href="#_2-9-3「动画常见属性」" aria-label="Permalink to &quot;**2.9.3「动画常见属性」**&quot;">​</a></h4><table tabindex="0"><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>@keyframes</td><td>规定动画。</td></tr><tr><td>animation</td><td>所有动画属性的简写属性，除了 animation-play-state 属性。</td></tr><tr><td>animation-name</td><td>规定@keyframes 动画的名称。(必须的)</td></tr><tr><td>animation-duration</td><td>规定动画完成一个周期所花费的秒或毫秒，默认是 0。(必须的)</td></tr><tr><td>animation-timing-function</td><td>规定动画的速度曲线，默认是“ease”。</td></tr><tr><td>animation-delay</td><td>规定动画何时开始，默认是 0。</td></tr><tr><td>animation-iteration-count</td><td>规定动画被播放的次数，默认是 1，还有 infinite</td></tr><tr><td>animation-direction</td><td>规定动画是否在下一周期逆向播放，默认是“normal &quot;,alternate 逆播放</td></tr><tr><td>animation-play-state</td><td>规定动画是否正在运行或暂停。默认是&quot;running&quot;,还有&quot;pause&quot;。</td></tr><tr><td>animation-fill-mode</td><td>规定动画结束后状态，保持 forwards 回到起始 backwards</td></tr></tbody></table><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">aquamarine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 动画名称 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  animation-name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">move</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 动画花费时长 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  animation-duration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 动画速度曲线 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  animation-timing-function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ease-in-out</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 动画等待多长时间执行 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  animation-delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 规定动画播放次数 infinite: 无限循环 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  animation-iteration-count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">infinite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 是否逆行播放 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  animation-direction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">alternate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 动画结束之后的状态 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  animation-fill-mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">forwards</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:hover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 规定动画是否暂停或者播放 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  animation-play-state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">paused</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="_2-9-4「动画简写方式」" tabindex="-1"><strong>2.9.4「动画简写方式」</strong> <a class="header-anchor" href="#_2-9-4「动画简写方式」" aria-label="Permalink to &quot;**2.9.4「动画简写方式」**&quot;">​</a></h4><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* animation: 动画名称 持续时间 运动曲线 何时开始 播放次数 是否反方向 起始与结束状态 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">animation: name duration </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">timing-function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> delay </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">iteration-count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> direction </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">fill-mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><ul><li>简写属性里面不包含 <code>animation-paly-state</code></li><li>暂停动画 <code>animation-paly-state: paused</code>; 经常和鼠标经过等其他配合使用</li><li>要想动画走回来，而不是直接调回来：<code>animation-direction: alternate</code></li><li>盒子动画结束后，停在结束位置：<code>animation-fill-mode: forwards</code></li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">animation: move 2s linear 1s infinite alternate forwards;</span></span></code></pre></div><h4 id="_2-9-5「速度曲线细节」" tabindex="-1"><strong>2.9.5「速度曲线细节」</strong> <a class="header-anchor" href="#_2-9-5「速度曲线细节」" aria-label="Permalink to &quot;**2.9.5「速度曲线细节」**&quot;">​</a></h4><p><code>animation-timing-function</code>: 规定动画的速度曲线，默认是</p><table tabindex="0"><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>linear</td><td>动画从头到尾的速度是相同的。匀速</td></tr><tr><td>ease</td><td>默认。动画以低速开始，然后加快，在结束前变慢。</td></tr><tr><td>ease-in</td><td>动画以低速开始。</td></tr><tr><td>ease-out</td><td>动画以低速结束。</td></tr><tr><td>ease-in-out</td><td>动画以低速开始和结束。</td></tr><tr><td>steps()</td><td>指定了时间函数中的间隔数量(步长)</td></tr></tbody></table><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*打字机效果*/</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  line-height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  white-space</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nowrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  overflow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hidden</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">aquamarine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  animation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">move</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">s</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> steps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">forwards</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@keyframes</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> move</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  0%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  100%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">480</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_2-10-3d-转换" tabindex="-1">2.10 3D 转换 <a class="header-anchor" href="#_2-10-3d-转换" aria-label="Permalink to &quot;2.10 3D 转换&quot;">​</a></h3><h4 id="_2-10-1-三维坐标系" tabindex="-1">2.10.1 三维坐标系 <a class="header-anchor" href="#_2-10-1-三维坐标系" aria-label="Permalink to &quot;2.10.1 三维坐标系&quot;">​</a></h4><p>三维坐标系其实就是指立体空间，立体空间是由 3 个轴共同组成的。</p><ul><li>x 轴:水平向右―注意 ∶× 右边是正值，左边是负值</li><li>y 轴:垂直向下注意:y 下面是正值，上面是负值</li><li>z 轴:垂直屏幕注意:往外面是正值，往里面是负值</li></ul><p><strong>3D 转换知识要点</strong></p><ul><li><code>3D</code> 位移：<code>translate3d(x, y, z)</code></li><li><code>3D</code> 旋转：<code>rotate3d(x, y, z)</code></li><li><code>透视</code> ：<code>perspctive</code></li><li><code>3D</code>呈现 <code>transfrom-style</code></li></ul><h4 id="_2-10-2-3d-移动-translate3d" tabindex="-1">2.10.2 3D 移动 translate3d <a class="header-anchor" href="#_2-10-2-3d-移动-translate3d" aria-label="Permalink to &quot;2.10.2 3D 移动 translate3d&quot;">​</a></h4><p><code>3D</code> 移动就是在 <code>2D</code> 移动的基础上多加了一个可以移动的方向，就是 z 轴方向</p><ul><li><code>transform: translateX(100px)</code>：仅仅是在 x 轴上移动</li><li><code>transform: translateY(100px)</code>：仅仅是在 y 轴上移动</li><li><code>transform: translateZ(100px)</code>：仅仅是在 z 轴上移动</li><li><code>transform: translate3d(x, y, z)</code>：其中 x、y、z 分别指要移动的轴的方向的距离</li><li><code>注意：x, y, z 对应的值不能省略，不需要填写用 0 进行填充</code></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  transform: translate3d(100px, 100px, 100px)</span></span>
<span class="line"><span>  /* 注意：x, y, z 对应的值不能省略，不需要填写用 0 进行填充 */</span></span>
<span class="line"><span>  transform: translate3d(100px, 100px, 0)</span></span></code></pre></div><h4 id="_2-10-3-透视-perspective" tabindex="-1">2.10.3 透视 perspective <a class="header-anchor" href="#_2-10-3-透视-perspective" aria-label="Permalink to &quot;2.10.3 透视 perspective&quot;">​</a></h4><ul><li><p>在 2D 平面产生近大远小视觉立体，但是只是效果二维的</p></li><li><p>如果想要在网页产生 3D 效果需要透视（理解成 3D 物体投影在 2D 平面内)。</p></li><li><p>模拟人类的视觉位置，可认为安排一只眼睛去看</p></li><li><p>透视我们也称为视距︰视距就是人的眼睛到屏幕的距离</p></li><li><p>距离视觉点越近的在电脑平面成像越大，越远成像越小</p></li><li><p>透视的单位是像素</p></li><li><p><strong>透视需要写在被视察元素的父盒子上面</strong></p></li><li><ul><li>d：就是视距，视距就是指人的眼睛到屏幕的距离</li><li>z：就是 z 轴，z 轴越大(正值)，我们看到的物体就越大</li></ul></li></ul><p>代码演示</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /*透视需要写在被视察元素的父盒子上面 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  perspective</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>translateZ 与 perspective 的区别</strong></p><ul><li><code>perspecitve</code> 给父级进行设置视距的，<code>translateZ</code> 给 子元素进行设置不同的大小</li></ul><h4 id="_2-10-4-3d-旋转-rotatex" tabindex="-1">2.10.4 3D 旋转 rotateX <a class="header-anchor" href="#_2-10-4-3d-旋转-rotatex" aria-label="Permalink to &quot;2.10.4 3D 旋转 rotateX&quot;">​</a></h4><p><strong>3D 旋转</strong>指可以让元素在三维平面内沿着 x 轴、y 轴、z 轴 或者自定义轴进行旋转</p><ul><li><p><code>语法：</code></p></li><li><ul><li><strong>transform: rotateX(45deg)</strong> -- 沿着 x 轴正方向旋转 45 度</li><li><strong>transform: rotateY(45deg)</strong> -- 沿着 y 轴正方向旋转 45 度</li><li><strong>transform: rotateZ(45deg)</strong> -- 沿着 z 轴正方向旋转 45 度</li><li><strong>transform: rotate3d(x, y, z, 45deg)</strong> -- 沿着自定义轴旋转 45 deg 为角度</li></ul></li><li><p><code>左手法则：</code></p></li><li><ul><li>左手的手拇指指向 x 轴的正方向</li><li>其余手指的弯曲方向就是该元素沿着 x 轴旋转的方向</li></ul></li><li><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /*透视写在被视察元素的父盒子上面 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  perspective</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*被观察元素*/</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  transition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">all</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:hover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rotateX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-45</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">deg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ul><h4 id="_2-10-5-3d-旋转-rotatey" tabindex="-1">2.10.5 3D 旋转 rotateY <a class="header-anchor" href="#_2-10-5-3d-旋转-rotatey" aria-label="Permalink to &quot;2.10.5 3D 旋转 rotateY&quot;">​</a></h4><ul><li><code>左手法则：</code><ul><li>左手的拇指指向 y 轴的正方向</li><li>其余的手指弯曲方向就是该元素沿着 y 轴旋转的方向(正值)</li></ul></li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  perspective</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  transition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">all</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:hover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rotateY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">180</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">deg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="_2-10-6-3d-旋转-rotatez" tabindex="-1">2.10.6 3D 旋转 rotateZ <a class="header-anchor" href="#_2-10-6-3d-旋转-rotatez" aria-label="Permalink to &quot;2.10.6 3D 旋转 rotateZ&quot;">​</a></h4><p><strong>transform: rotate3d(x, y, z, deg)</strong> -- 沿着自定义轴旋转 deg 为角度</p><p>x, y, z 表示旋转轴的矢量，是标识你是否希望沿着该轴进行旋转，最后一个标识旋转的角度</p><ul><li><ul><li><strong>transform: rotate3d(1, 1, 0, 180deg)</strong> -- 沿着对角线旋转 45deg</li><li><strong>transform: rotate3d(1, 0, 0, 180deg)</strong> -- 沿着 x 轴旋转 45deg</li></ul></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>div {</span></span>
<span class="line"><span>  perspective: 500px;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>img {</span></span>
<span class="line"><span>  display: block;</span></span>
<span class="line"><span>  margin: 100px auto;</span></span>
<span class="line"><span>  transition: all 1s;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>img:hover {</span></span>
<span class="line"><span>  transform: rotateZ(180deg)</span></span>
<span class="line"><span>}</span></span></code></pre></div><h4 id="_2-10-7-3d-呈现-transform-style" tabindex="-1">2.10.7 3D 呈现 transform-style <a class="header-anchor" href="#_2-10-7-3d-呈现-transform-style" aria-label="Permalink to &quot;2.10.7 3D 呈现 transform-style&quot;">​</a></h4><ul><li>控制子元素是否开启三维立体环境</li><li><code>transform-style: flat</code> 代表子元素不开启 <code>3D</code> 立体空间，默认的</li><li><code>transform-style: preserve-3d</code> 子元素开启立体空间</li><li>代码写给父级，但是影响的是子盒子</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;body&gt;</span></span>
<span class="line"><span>    &lt;div class=&quot;box&quot;&gt;</span></span>
<span class="line"><span>        &lt;div&gt;&lt;/div&gt;</span></span>
<span class="line"><span>        &lt;div&gt;&lt;/div&gt;</span></span>
<span class="line"><span>    &lt;/div&gt;</span></span>
<span class="line"><span>&lt;/body&gt;</span></span>
<span class="line"><span>&lt;style&gt;</span></span>
<span class="line"><span>    body {</span></span>
<span class="line"><span>        perspective: 500px;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    .box {</span></span>
<span class="line"><span>        position: relative;</span></span>
<span class="line"><span>        width: 200px;</span></span>
<span class="line"><span>        height: 200px;</span></span>
<span class="line"><span>        margin: 100px auto;</span></span>
<span class="line"><span>        transition: all 2s;</span></span>
<span class="line"><span>        /* 让子元素保持3d立体空间环境 */</span></span>
<span class="line"><span>        transform-style: preserve-3d;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    .box:hover {</span></span>
<span class="line"><span>        transform: rotateY(60deg);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    .box div {</span></span>
<span class="line"><span>        position: absolute;</span></span>
<span class="line"><span>        top: 0;</span></span>
<span class="line"><span>        left: 0;</span></span>
<span class="line"><span>        width: 100%;</span></span>
<span class="line"><span>        height: 100%;</span></span>
<span class="line"><span>        background-color: pink;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    .box div:last-child {</span></span>
<span class="line"><span>        background-color: purple;</span></span>
<span class="line"><span>        transform: rotateX(60deg);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>&lt;/style&gt;</span></span></code></pre></div><h2 id="_3-浏览器私有前缀" tabindex="-1">3. 浏览器私有前缀 <a class="header-anchor" href="#_3-浏览器私有前缀" aria-label="Permalink to &quot;3. 浏览器私有前缀&quot;">​</a></h2><p>浏览器私有前缀是为了兼容老版本的写法，比较新版本的浏览器无须添加。</p><p><strong>1.私有前缀</strong></p><ul><li>-moz-∶ 代表 firefox 浏览器私有属性</li><li>-ms-:代表 ie 浏览器私有属性</li><li>-webkit-:代表 safari、chrome 私有属性</li><li>-o-︰代表 Opera 私有属性</li></ul><p><strong>2.提倡的写法</strong></p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-moz-border-radius: 10px;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-webkit-border-radius: 10px;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-o-border-radius: 10px;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 10px;</span></span></code></pre></div>`,165),p=[e];function h(k,d,r,o,E,g){return a(),i("div",null,p)}const u=s(l,[["render",h]]);export{y as __pageData,u as default};
