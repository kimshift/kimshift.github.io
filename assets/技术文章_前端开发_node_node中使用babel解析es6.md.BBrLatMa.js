import{_ as s,q as a,p as i,aE as e}from"./chunks/framework.-H45_L2h.js";const E=JSON.parse('{"title":"node中使用babel解析es6","description":"","frontmatter":{"title":"node中使用babel解析es6","date":"2023-06-01T10:47:41.000Z","categories":["前端开发"],"tags":["node"],"sidebar":false},"headers":[],"relativePath":"技术文章/前端开发/node/node中使用babel解析es6.md","filePath":"技术文章/前端开发/node/node中使用babel解析es6.md","lastUpdated":1723096133000}'),l={name:"技术文章/前端开发/node/node中使用babel解析es6.md"},n=e(`<h1 id="node-中使用-babel-解析-es6" tabindex="-1">node 中使用 babel 解析 es6 <a class="header-anchor" href="#node-中使用-babel-解析-es6" aria-label="Permalink to &quot;node 中使用 babel 解析 es6&quot;">​</a></h1><ol><li><p>安装依赖</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @babel/core</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @babel/cli</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @babel/preset-env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  @babel/node</span></span></code></pre></div><ul><li>@babel/core 是 Bable 进行代码转换的核心，@babel/cli,@babel/node 都依赖他</li><li>@babel/cli 是一个内置的 CLI，可以通过命令行编译文件</li><li>@babel/preset-env 是一个预设集合，允许您使用最新的 JavaScript，他会根据目标环境对代码降级处理</li><li>@babel/node 是一个与 Node.js CLI 完全相同的 CLI，在运行之前使用 Babel 预设和插件进行编译，执行的时候会占用大量内存空间，Babel 官方不建议在生产环境使用</li></ul></li><li><p>新增配置文件：.babelrc 文件</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;presets&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;@babel/preset-env&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>修改 package.json 中 script 的启动命令命令</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     &quot;start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;babel-node app.js&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>nodemon 方式的启动修改</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nodemon --exec babel-node app.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ol>`,2),t=[n];function p(h,d,o,k,c,b){return i(),a("div",null,t)}const g=s(l,[["render",p]]);export{E as __pageData,g as default};
