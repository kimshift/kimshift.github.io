import{_ as s,q as a,p as i,aE as e}from"./chunks/framework.-H45_L2h.js";const E=JSON.parse('{"title":"6.本地存储","description":"","frontmatter":{"title":"6.本地存储","date":"2023-06-02T10:59:55.000Z","categories":["前端开发"],"tags":["javascript","js基础"],"prev":"5.移动端特效","next":"../js进阶/1.js面向对象编程"},"headers":[],"relativePath":"技术文章/前端开发/javascript/js基础/6.本地存储.md","filePath":"技术文章/前端开发/javascript/js基础/6.本地存储.md","lastUpdated":1723096133000}'),t={name:"技术文章/前端开发/javascript/js基础/6.本地存储.md"},n=e(`<h1 id="_6-本地存储" tabindex="-1">6.本地存储 <a class="header-anchor" href="#_6-本地存储" aria-label="Permalink to &quot;6.本地存储&quot;">​</a></h1><h2 id="_1-本地存储" tabindex="-1">1. 本地存储 <a class="header-anchor" href="#_1-本地存储" aria-label="Permalink to &quot;1. 本地存储&quot;">​</a></h2><p>随着互联网的快速发展，基于网页的应用越来越普遍，同时也变的越来越复杂，为了满足各种各样的需求，会经 常性在本地存储大量的数据，HTML5 规范提出了相关解决方案。</p><p>本地存储特性</p><ol><li>数据存储在用户浏览器中</li><li>设置、读取方便、甚至页面刷新不丢失数据</li><li>容量较大，sessionStorage 约 5M、localStorage 约 20M</li><li>只能存储字符串，可以将对象 JSON.stringify() 编码后存储</li></ol><h2 id="_2-window-sessionstorage" tabindex="-1">2. window.sessionStorage <a class="header-anchor" href="#_2-window-sessionstorage" aria-label="Permalink to &quot;2. window.sessionStorage&quot;">​</a></h2><ol><li>生命周期为关闭浏览器窗口</li><li>在同一个窗口(页面)下数据可以共享</li><li>以键值对的形式存储使用</li></ol><p><strong>存储数据</strong>：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sessionStorage.setItem(key, value)</span></span></code></pre></div><p><strong>获取数据</strong>：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sessionStorage.getItem(key)</span></span></code></pre></div><p><strong>删除数据</strong>：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sessionStorage.removeItem(key)</span></span></code></pre></div><p><strong>删除所有数据</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sessionStorage.clear()</span></span></code></pre></div><h2 id="_3-window-localstorage" tabindex="-1">3. window.localStorage <a class="header-anchor" href="#_3-window-localstorage" aria-label="Permalink to &quot;3. window.localStorage&quot;">​</a></h2><ol><li>声明周期永久生效，除非手动删除 否则关闭页面也会存在</li><li>可以多窗口（页面）共享（同一浏览器可以共享）</li><li>以键值对的形式存储使用</li></ol><p><strong>存储数据</strong>：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>localStorage.setItem(key, value)</span></span></code></pre></div><p><strong>获取数据</strong>：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>localStorage.getItem(key)</span></span></code></pre></div><p><strong>删除数据</strong>：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>localStorage.removeItem(key)</span></span></code></pre></div><p><strong>删除所有数据</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>localStorage.clear()</span></span></code></pre></div><h2 id="_4-小结" tabindex="-1">4.小结 <a class="header-anchor" href="#_4-小结" aria-label="Permalink to &quot;4.小结&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//localStorage:关闭浏览器窗口缓存数据不清除</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.localStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;goodsInfo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obj))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.localStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(key, value) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//设置指定 key 的数据（JSON 格式）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.localStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(key) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//获取指定 key 的数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.localStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(key) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//删除指定 key 的数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.localStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">clear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//清空所有的存储数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//sessionStorage:关闭浏览器窗口缓存数据会被清除</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.sessionStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(key, value)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.sessionStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(key)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.sessionStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(key)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.sessionStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">clear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div>`,27),l=[n];function p(o,h,r,d,k,g){return i(),a("div",null,l)}const y=s(t,[["render",p]]);export{E as __pageData,y as default};
